vi li;
bool bf1(int col,vector<vector<int>>&g,int node,vector<int>&vis,vector<int>&cg){

li.pb(node);
vis[node]=1;
cg[node]=col;
for(int i=0;i<g[node].size();i++){

    if(cg[g[node][i]]==-1){

        if(bf1(!col,g,g[node][i],vis,cg)==false){
         return false;
        }
    }
    else if(cg[node]==g[node][i]){

        return false;
    }

}



}




void s2(){

int v,e;

cin>>v>>e;

vector<vector<int>>g(v+1);

while(e--){

    int f,t;
    cin>>f>>t;

    g[f].pb(t);

    g[t].pb(f);


}

pngraph(v+1,g);
cout<<g.size()<<endl;
vector<int>vis(v+2,-1);
vector<int>cg(v+2,-1);

cout<<li.size()<<endl;
pn(li,li.size());

for(int i=1;i<=v;i++){

if(bf1(0,g,i,vis,cg)==false){

    cout<<"NOT Bipertite"<<endl;
    return ;
}
cout<<"Bipartite "<<endl;
pn(cg,v+2);

}

}
