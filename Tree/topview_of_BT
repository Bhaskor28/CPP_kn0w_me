struct Node
{
    int data;
    Node* left;
    Node* right;
};
*/
class Solution {
  public:
    // Function to return a list of nodes visible from the top view
    // from left to right in Binary Tree.
    
    vector<int> levelorder(Node* root){
        
        map<int,int>mp;
        queue<pair<Node* ,int>>q;
        q.push({root,0});
        
        while(!q.empty()){
            
            auto tem=q.front();
            q.pop();
            int x=tem.second;
            if(mp.find(tem.second)==mp.end()){
                
                mp[x]=(tem.first->data);
            }
            if(tem.first->left){
                
                q.push({tem.first->left,x-1});
                
            }
            if(tem.first->right){
                
                q.push({tem.first->right,x+1});
            }
            
            
            
        }
        vector<int>ans;
        
        for(auto el:mp){
        ans.push_back(el.second);    
            
        }
        return ans;
        
        
    }
    
    vector<int> topView(Node *root) {
        // code here
        
        return levelorder(root);
    }
};
