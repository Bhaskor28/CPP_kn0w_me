int minOperations(string &s1, string &s2) {
        // Your code goes here
        
        
        int n=s1.size();
        int m=s2.size();
        
        vector<vector<int>>dp(n+1,vector<int>(m+1,0));
        
        
        for(int i=1;i<=n;i++){
            
            for(int j=1;j<=m;j++){
                
                if(s1[i-1]==s2[j-1]){
                    dp[i][j]=1+dp[i-1][j-1];
                    
                }
                else{
                    
                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
                    
                }
                
                
            }
            
            
        }
        //return m+n-dp[n][m];
        
        string ans="";
        int i=n,j=m;
        while(i>0 && j>0){
            
            
            
            if(s1[i]==s2[j]){
                
                ans+=s1[i];
                i--;
                j--;
            }
            else{
                
                if(dp[i-1][j]>dp[i][j-1])
                    i--;
                else
                    j--;
            }
            
            
            
            
            
        }
        /*
        cout<<ans<<endl;
        cout<<n+m<<endl;
        cout<<ans.length()<<endl;
        
        */
        return n+m-2*dp[n][m];
